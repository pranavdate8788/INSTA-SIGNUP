<!DOCTYPE html>
<html>
<head>
    <title>Tic-Tac-Toe</title>
    <style>
body {
    text-align: center;
    font-family: Arial, sans-serif;
}

h1 {
    font-size: 24px;
    margin-bottom: 20px;
}

#tic-tac-toe-board {
    display: grid;
    grid-template-columns: repeat(3, 100px);
    grid-gap: 10px;
    margin: 0 auto;
}

.cell {
    width: 100px;
    height: 100px;
    font-size: 36px;
    text-align: center;
    border: 2px solid #333;
    cursor: pointer;
}

#message {
    margin: 20px;
    font-size: 18px;
}

#reset-button {
    padding: 10px 20px;
    font-size: 18px;
    cursor: pointer;
    background-color: #333;
    color: #fff;
    border: none;
    border-radius: 5px;
}

</style>
</head>
<body>
    <h1>Tic-Tac-Toe</h1>
    <div id="tic-tac-toe-board">
        <div class="cell" onclick="makeMove(this)"></div>
        <div class="cell" onclick="makeMove(this)"></div>
        <div class="cell" onclick="makeMove(this)"></div>
        <div class="cell" onclick="makeMove(this)"></div>
        <div class="cell" onclick="makeMove(this)"></div>
        <div class="cell" onclick="makeMove(this)"></div>
        <div class="cell" onclick="makeMove(this)"></div>
        <div class="cell" onclick="makeMove(this)"></div>
        <div class="cell" onclick="makeMove(this)"></div>
    </div>
    <p id="message"></p>
    <button id="reset-button" onclick="resetBoard()">Reset</button>
    <script >
let currentPlayer = 'X';
let board = ['', '', '', '', '', '', '', '', ''];
let gameOver = false;

const winningCombinations = [
    [0, 1, 2],
    [3, 4, 5],
    [6, 7, 8],
    [0, 3, 6],
    [1, 4, 7],
    [2, 5, 8],
    [0, 4, 8],
    [2, 4, 6],
];

function makeMove(cell) {
    const cellIndex = Array.from(cell.parentNode.children).indexOf(cell);

    if (board[cellIndex] === '' && !gameOver) {
        cell.textContent = currentPlayer;
        board[cellIndex] = currentPlayer;
        if (checkForWin(currentPlayer)) {
            document.getElementById('message').textContent = `Player ${currentPlayer} wins!`;
            gameOver = true;
        } else if (board.every((cell) => cell !== '')) {
            document.getElementById('message').textContent = "It's a draw!";
            gameOver = true;
        } else {
            currentPlayer = currentPlayer === 'X' ? 'O' : 'X';
        }
    }
}

function checkForWin(player) {
    return winningCombinations.some((combination) => {
        return combination.every((index) => board[index] === player);
    });
}

function resetBoard() {
    document.querySelectorAll('.cell').forEach((cell) => {
        cell.textContent = '';
    });
    document.getElementById('message').textContent = '';
    currentPlayer = 'X';
    board = ['', '', '', '', '', '', '', '', ''];
    gameOver = false;
}

resetBoard();

</script>
</body>
</html>
